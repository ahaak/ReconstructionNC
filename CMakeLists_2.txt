PROJECT( reconstructionNC )
#https://github.com/sintefmath/sist/blob/master/CMakeLists.txt
CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
IF(COMMAND CMAKE_POLICY)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)


 # Test 32/64 bits
 if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
     message(STATUS "Target is 64 bits")
     if (WIN32)
       set(EXECUTABLE_OUTPUT_PATH D:/Development/Bin64 CACHE PATH "Build directory" FORCE)
     endif(WIN32)
 else("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
     message(STATUS "Target is 32 bits")
     if (WIN32)
        set(EXECUTABLE_OUTPUT_PATH D:/Development/Bin32 CACHE PATH "Build directory" FORCE)
     endif(WIN32)
 endif("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")


# Microsoft specific items
IF( MSVC )
 # Kill the anoying MS VS warning about non-safe functions.
 # They hide real warnings.
 ADD_DEFINITIONS(
   /D_SCL_SECURE_NO_DEPRECATE
   /D_CRT_SECURE_NO_DEPRECATE
   /D_CRT_TIME_FUNCTIONS_NO_DEPRECATE
 )
ENDIF()

# Pluss lib
FIND_PACKAGE (PlusLib)
IF ( PlusLib_FOUND)
  INCLUDE( ${PlusLib_USE_FILE} )
ELSE( PlusLib_FOUND )
    MESSAGE( FATAL_ERROR "This project requires PlusLib. One of these components is missing. Please verify configuration")
ENDIF( PlusLib_FOUND )
LINK_LIBRARIES(${PLUS_LIBS} )


FIND_PACKAGE (ITK REQUIRED)
INCLUDE( ${USE_ITK_FILE} )

FIND_PACKAGE (VTK REQUIRED)
INCLUDE( ${USE_VTK_FILE} )

FIND_PACKAGE(OpenCV REQUIRED )

#LINK_LIBRARIES(${OpenCV_LIBS} )


#FIND_PACKAGE(CUDA REQUIRED)
 

LINK_DIRECTORIES ("C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/lib/Win32") 


# Boost stuff

INCLUDE_DIRECTORIES( D:/VisualStudioBaseProjects/boost_1_56_0/bin32/include/boost-1_56)
LINK_DIRECTORIES( D:/VisualStudioBaseProjects/boost_1_56_0/bin32/Lib/${OutDir})

		

SET( putImagesIn3DFiles
	putImagesIn3D.cpp
	)
SET( putImagesIn3D_V2Files
	putImagesIn3D_V2.cpp
	)
SET( putImagesIn3D_PlusFiles
	putImagesIn3D_Plus.cpp
	)
# common stuff

INCLUDE_DIRECTORIES( $ENV{ALEX_COMMON_DIR} )

ADD_EXECUTABLE( putImagesIn3D ${putImagesIn3DFiles})
TARGET_LINK_LIBRARIES ( putImagesIn3D ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${OpenCV_LIBS} )

ADD_EXECUTABLE( putImagesIn3D_V2 ${putImagesIn3D_V2Files})
TARGET_LINK_LIBRARIES ( putImagesIn3D_V2 ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${OpenCV_LIBS} )

ADD_EXECUTABLE( putImagesIn3D_Plus ${putImagesIn3D_PlusFiles})
TARGET_LINK_LIBRARIES ( putImagesIn3D_Plus ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${OpenCV_LIBS} vtkPlusCommon )